{
  "name": "aminosee",
  "version": "1.32.8",
  "owner": "Thomas Bieder Atkinson",
  "author": "Tom Atkinson <tom@funk.co.nz>",
  "website": "http://aminosee.funk.nz",
  "license": "GPL-3.0-only",
  "repository": {
    "type": "git",
    "url": "git://github.com/tomachinz/AminoSee.git"
  },
  "description": "A unique visualisation of any large chunk of DNA or RNA residing in ASCII text files (such as FASTA, GBK etc and also just .txt like my hand-made test files), AminoSee is a way to render huge genomics files into a left-to-right top-bottom PNG linear image, a 2D infinite space filling square curve from 18th century, and a 3D hilbert curve from this century! Computation is done locally, without the files leaving your machine. A back-end terminal daemon cli command that can be scripted is combined with a front-end GUI using the Carlo, AminoSee features asynchronous streaming processing enabling arbitrary size files to be processed. It has been tested with files in excess of 4 GB and does not need the whole file in memory at any time. Try running 'aminosee *' in a directory with DNA files, or better run the batch script 'batch-peptides.sh'. The folder 'dna' is provided for bulk rendering it already has those scripts present. The GUI is not finished at this time. it is using THREEjs and a 3D Hilbert Curve, Carlo. Command line options allow one to filter by peptide, for example 'aminosee * --peptide=Ochre'. Allows genomics researchers to convert any file containing blocks of text format DNA (Fasta, GBK, .txt) into an interactive experience.",
  "main": "./bin/aminosee",
  "bin": {
    "aminosee": "./bin/aminosee"
  },
  "build": {
    "productName": "aminosee",
    "appId": "nz.funk.aminosee",
    "copyright": "Copyright Â© 2018-2020 Tom Atkinson",
    "icon": "src/public/favicon.png",
    "directories": [
      "src/public/*",
      "src/*"
    ],
    "mac": {
      "category": [
        "public.app-category.education",
        "public.app-category.medical"
      ]
    }
  },
  "scripts": {
    "postpublish": "PACKAGE_VERSION=$(cat package.json | grep \\\"version\\\" | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]') && git tag v$PACKAGE_VERSION && git push --tags",
    "cypress": "node_modules/.bin/cypress open",
    "demo": "node bin/aminosee demo",
    "credits": "./build-credits.sh",
    "clean": "rimraf ./dist ./build",
    "debug": "node --inspect 27MB_TestPattern.txt --peptide=Ochre 3MB_TestPattern.txt 50KB_TestPattern.txt batch-peptides.sh batch-process.sh Gorilla_gorGor4_chr2B.fa",
    "eslint": "eslint -c .eslintrc.js src/aminosee-cli.js > test/eslint-errors.txt ; tail -n 64 test/eslint-errors.txt ; cat test/eslint-errors.txt | wc ",
    "gource": "./gource.sh",
    "test": "echo 'requires cli programs: time, lighthouse, vows etc' ; time ./run-test.sh --quiet ;",
    "start": "node bin/aminosee",
    "serve": "node ./bin/aminosee",
    "inspect": "node --inspect bin/aminosee.js dna/27MB_TestPattern.txt /Volumes/aminosee/dna/Brown_Kiwi_NW_013982187v1.fa   /Volumes/aminosee/dna/Brown_Kiwi_NW_013982187v1.fa  -f -c1000 -vd --debug",
    "inspect2": "node --inspect bin/aminosee.js dna/50KB_TestPattern.txt -f -vd --debug",
    "build": "nice npm run build-web ; nice time npm run macos",
    "build-all": "./run-test.sh --quiet ; ./build-web.sh ; npm run pkg; ",
    "build-web": "npm run credits; npm run genversion ;  npm run browserify  ; npm run minify ;",
    "genversion": "genversion src/aminosee-version.js",
    "browserify": "echo DISABLED browserify bin/aminosee.js -o bin/aminosee.bundle.js",
    "minify": "echo DISABLED uglify bin/aminosee.bundle.js -o bin/aminosee.min.js",
    "update": "./update.sh",
    "pkg": "nice npm run win32 ; nice npm run _macos ; nice npm run _linux ; nice npm run _win64; nice npm run zip",
    "zip": "zip -8 -r ./dist/AminoSee_macos.zip ./dist/AminoSee_macos  ; nice zip -8 -r ./dist/AminoSee_win.zip ./dist/AminoSee_win ; nice zip -8 -r ./dist/AminoSee_linux.zip ./dist/AminoSee_linux",
    "runmac": "time ./dist/AminoSee_macos/aminosee --demo -m9",
    "runlinux": "open ./dist/AminoSee_linux/aminosee --test -m9",
    "macos": "echo MACOS ; pkg . --build --targets macos   --output ./dist/AminoSee_macos/aminosee ; ./dist/AminoSee_macos/aminosee",
    "win32": "echo WIN32 ; pkg . --targets win-x86 --output ./dist/AminoSee_win/aminosee-win32.exe",
    "win64": "echo WIN64 ; pkg . --targets win-x64 --output ./dist/AminoSee_win/aminosee.exe",
    "linux": "echo LINUX ; pkg . --targets linux   --output ./dist/AminoSee_linux/aminosee ;  ./dist/AminoSee_linux/aminosee",
    "_macos": "echo MACOS ; pkg . --targets macos   --output ./dist/AminoSee_macos/aminosee   ; zip -8 -r ./dist/AminoSee_macos.zip ./dist/AminoSee_macos",
    "_win32": "echo WIN32 ; pkg . --targets win-x86 --output ./dist/AminoSee_win/aminosee-win32.exe ;",
    "_win64": "echo WIN64 ; pkg . --targets win-x64 --output ./dist/AminoSee_win/aminosee.exe ; zip -8 -r ./dist/AminoSee_win.zip ./dist/AminoSee_win",
    "_linux": "echo LINUX ; pkg . --targets linux   --output ./dist/AminoSee_linux/aminosee   ; zip -8 -r ./dist/AminoSee_linux.zip ./dist/AminoSee_linux"
  },
  "dependencies": {
    "@neutralinojs/neu": "^1.7.0",
    "async-kit": "^2.2.4",
    "autocannon": "^4.6.0",
    "bcrypt": "^5.0.0",
    "chalk": "^2.4.2",
    "describe": "^1.2.0",
    "fs-extra": "^8.1.0",
    "genversion": "^2.2.1",
    "hammerjs": "^2.0.8",
    "hilbert-2d": "0.0.1",
    "http-server": "^0.12.3",
    "internal-ip": "^4.3.0",
    "json-beautify": "^1.1.1",
    "node-fetch": "^2.6.1",
    "open": "^8.0.4",
    "parallax-js": "^3.1.0",
    "phoenix": "^1.5.6",
    "preferences": "^1.0.2",
    "terminal-kit": "^1.43.0",
    "three": "^0.118.3",
    "vows": "^0.8.3",
    "xmlhttprequest": "^1.8.0",
    "xterm": "^4.9.0"
  },
  "devDependencies": {
    "@gmod/indexedfasta": "^1.0.13",
    "ascii-histogram": "^1.2.1",
    "async": "^3.2.0",
    "body-parser": "^1.19.0",
    "browser-resolve": "^1.11.3",
    "browserify": "^16.5.2",
    "bytes": "^3.1.0",
    "carlo": "^0.9.46",
    "cross-spawn": "^6.0.5",
    "cucumber": "^5.1.0",
    "cypress": "^5.4.0",
    "dat.gui": "^0.7.7",
    "ecstatic": "^4.1.4",
    "eslint": "^7.11.0",
    "eslint-config-rallycoding": "^3.2.0",
    "event-stream": "^4.0.1",
    "get-cursor-position": "^1.0.5",
    "humanize-duration": "^3.24.0",
    "husky": "^3.1.0",
    "keypress": "^0.2.1",
    "lazyness": "^1.2.0",
    "local-web-server": "^4.2.1",
    "minimist": "^1.2.5",
    "node-gyp": "^5.1.1",
    "node-pty": "^0.8.1",
    "npm-merge-driver": "^2.3.6",
    "parse-apache-directory-index": "^1.2.1",
    "pkg": "^4.4.9",
    "png.js": "^0.2.1",
    "pngjs": "^3.4.0",
    "remove": "^0.1.5",
    "request": "^2.88.2",
    "save": "^2.4.0",
    "serve": "^11.3.2",
    "serve-handler": "^6.1.3",
    "sliced": "^1.0.1",
    "spdy": "^4.0.2",
    "stream-file": "^0.2.4",
    "systeminformation": "^4.27.9",
    "tcp-port-used": "^1.0.1",
    "through": "^2.3.8",
    "uniq": "^1.0.1",
    "webpack-node-externals": "^1.7.2"
  },
  "keywords": [
    "dna",
    "genomics",
    "visualisation",
    "renderer",
    "genetics",
    "bioinformatics",
    "bionode",
    "amino acids",
    "peptides",
    "codons"
  ],
  "pkg": {
    "targets": [
      "node10",
      "linux",
      "macos",
      "win"
    ],
    "scripts": [],
    "assets": [
      "node_modules/terminal-kit/lib/Palette.js",
      "node_modules/terminal-kit/lib/image.js",
      "node_modules/hilbert-2d/hilbert.js",
      "node_modules/terminal-kit/lib/termconfig",
      "node_modules/terminal-kit/lib/colorScheme",
      "node_modules/open/xdg-open",
      "src/*",
      "src/public/*",
      "package.json"
    ]
  }
}
